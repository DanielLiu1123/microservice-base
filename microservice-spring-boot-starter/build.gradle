dependencies {
    api platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    annotationProcessor platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    compileOnly platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
    compileOnly platform("io.grpc:grpc-bom:${grpcVersion}")

    api 'org.springframework.boot:spring-boot-starter'

    // http
    compileOnly 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.springframework.boot:spring-boot-starter-actuator'
    compileOnly 'org.springframework.boot:spring-boot-starter-data-redis'
    compileOnly 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // grpc
    compileOnly "io.grpc:grpc-netty-shaded"
    compileOnly "io.grpc:grpc-services"
    if (JavaVersion.current().isJava9Compatible()) {
        compileOnly "jakarta.annotation:jakarta.annotation-api"
    }
    compileOnly "build.buf.protoc-gen-validate:pgv-java-grpc:${pgvVersion}"

    // Sentry integration, exception tracking and distributed tracing
    compileOnly platform("io.sentry:sentry-bom:${sentryVersion}")
    compileOnly("io.sentry:sentry-spring-boot-starter")
    compileOnly("io.sentry:sentry-openfeign")

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation project(':test-support')
}

apply from: "${rootProject.projectDir}/deploy.gradle"
